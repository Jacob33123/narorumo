#summary Using plats
= What is plats? =
plats helps you localize your client-side webapp. All you have to do is put some script tags in your page.

== Tell me more! ==
So web users can configure which languages they prefer for content, and this information is sent in HTTP requests to web servers as the [http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html Accept-Language] header. Strangely, this information doesn't seem accessible from javascript. But plats can help!

plats makes this information available to your client-side webapps. In fact, if you tell it which locales your application supports, plats tells you which of those locales your user would prefer.

== You shouldn't use plats unless you trust [Alex Alex]. ==
Seriously, don't let random dudes and ladies run their javascript all up in your context. Just go get the source [http://narorumo.googlecode.com/svn/trunk/plats here]. It's very simple, you can adapt it for your own use.

== If you're a GWT app ==
GWT applications can set their locale with a [http://code.google.com/p/google-web-toolkit-doc-1-5/wiki/DevGuideSpecifyingLocale special meta tag]. And plats will create that tag for you!

In your containing HTML's head tag, go like this, before you load your GWT selection script (the ".nocache.js" file):

{{{
...
  <head>
    <script src="http://plats.appspot.com/set_metatag.js?available=en,es,lt,it">
    </script>
  </head>
}}}

NB: This is assuming your application is localized for English, Spanish, Lithuanian and Italian. Modify the `available` parameter for the locales you support.

== If you just want some !JavaScript variables ==
plats can do that too. Go like this:
{{{
...
  <head>
    <script src="http://plats.appspot.com/put_variable.js?available=fr,jp">
    </script>
  </head>
}}}
You'll get two variables set on your `window` object: `window.plats_best_locale` and `window.plats_ordered_locales`. The latter of these is the list of all locales that the user would like, even if you don't support them.

== Issues ==
plats isn't perfect yet. There's a mismatch between locale codes and the language codes as sent by `Accept-Language`; if you get more specific than just a language code, things probably won't match up; there are underbars in locale codes and dashes in the Accept-Language header. Also I need to do more research about capitalization...