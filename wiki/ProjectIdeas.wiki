#summary Ideas for future projects

= Future project scratch space =

== livejournal friends birthdays iGoogle gadget ==
LJ has a gadget where they tell you which of your friends have upcoming birthdays, but you don't look at the livejournal front page very often. Build an iGoogle gadget that keeps your LJ login information, queries for your friend-birthday data, and displays it attractively. To be polite, cache things somewhere, say in an appengine app that only polls here and again?

== logo compiler ==
([http://code.google.com/p/narorumo/source/browse/#svn/trunk/wogo in progress])
Learn Logo, preferably the dialect supported by ucblogo. Compile it to javascript, gwt-style, and do turtle graphics with the canvas tag. Is there a formal grammar for ucblogo? The problem with this idea is: no repl.

== make the paip source code work with recent common lisps ==
Norvig's Paradigms of Artificial Intelligence Programming source doesn't load right with the CL implementations I have on my Ubuntu box, sbcl and clisp. CL has had problems standardizing its loading/packaging mechanisms for a while, but there's no good reason PAIP shouldn't run nicely on recent CLs. Fix it and send Dr. Norvig a patch! Also make sure the Debian package gets updated.

== Generate good sudoku puzzles ==
So the [http://sudokudlx.appspot.com sudoku solver] seems to work pretty well. But Ross would like an automated puzzle generator. How can we go about that? You can imagine generating an empty sudoku puzzle, shuffling the internal representation and then solving that (producing a random *solved* sudoku), but what then? What's the best way to take out the squares? A naive thing to do would be randomly pick some squares to take out, and keep backing up either until some set number/proportion have been erased, or until the puzzle is about to become underspecified. But the problem with that -- how do you determine whether a sudoku puzzle is underspecified? How do you modify Dancing Links to find all possible solutions instead of just the most convenient one?

== TEB ==
TEB was and is my long-running electronic poetry project, originally for a class and written in Common Lisp on top of an inference engine. I should dust it off and make it awesome. At one point, I spoke with Jon Trowbridge from the Gnoetry project, and he seemed both interested in working on poetry and very busy with work. Does TEB want to use/be part of/merge with gnoetry?

What TEB really really wants is to use NLTK (and probably be made of Python). Related: That horoscope remixer thing that never quite worked right.

Also related: what if there was a fake microblogging service that never lets on that it's just snagging random chunks of text from user-generated content sites (people's tweets, blogs, comments (oh mans, youtube)), maybe remixing them slightly, and passing them off as tweets for fictional users? Bonus points for making it pretend that you can sign up for an account, but mysteriously diverting you away from where you can register. Authenticity/verisimilitude bonus points for keeping content persistently, serving it up as feeds.

== itouched ==
Every time you touched a file, it diffs it against the last time you touched that file and records this in a database -- so you know how many lines of code or whatever you wrote in a day, or per week, or per month! Keep stats for later! ...

Develop a habit: every time you edit a file, go like "itouched filename".
Or maybe it just sits running all the time and watches for changes in your
home directory?

== Scrabblebot ==
I was working on a Scrabblebot for a while, and I felt like I had a promising approach for finding valid moves quickly... Scrabblebot wants to be refitted with a faster database. Look at how the other scrabblebots work to understand the problem space better. Write the scrabblebot in Scala. Learn Scala.

== that online programming community for kids ==
Figure out what to do about an online community where kids can build stuff in code and share it with each other. Look over notes towards WebMOOSE. Does this want to be made of Scratch, or similar to it? Can we include proper inheritance? Make it work for the OLPC.

== for ynniv ==
Less ambitious. Write a MUD. Do it in Scheme.

== Erdos Number calculator ==
If you've published in computer science or mathematics, or probably other fields, you likely have an Erdos number; Paul Erdos has 0, everyone else has 1 + (the lowest Erdos number of any of your co-authors).

Write an Erdos Number calculator with the dblp dataset. Learn a lot about databases. Do it with postgres; sqlite is apparently not nearly as fast.

== Sudoku solver in Haskell ==
Learn Haskell well enough to solve Sudoku with it. *How do you implement Dancing Links in a purely functional language?*

== Checkers bot ==
That'd be a good exercise. If you're going to overturn the world with your brilliant Go bot later, you should start out somewhere...

== Strick's challenge ==
Build a language and virtual machine. Educational for me, not very useful for other people. Recommended by Strick. Building a VM at a pretty high level of abstraction might not be that hard, just think about stack frames and returning things and whatnot?  At what level do things like the Python VM work? What's the JVM like, really?  Surely there are different approaches used for this? What are they? Would it be hard to build something with multithreading in mind from the bottom up? What about a purely functional lambda-calculus implementation? Then layers of abstraction and naming on top of the LC?

== archiving todo gadget ==
It'd be pretty cool to have a nicer Google Gadget (for igoogle) for keeping TODO lists. There are a bunch of these already, clearly, but one that archives your old items, searches and tags, would be pretty rockin'. And good practice. And make me learn to build gadgets.

== inline test cases ==
[doctest http://docs.python.org/library/doctest.html] for Python is pretty hip. What if that was available for your other favorite language?

There's a project going for Haskell, apparently: [http://github.com/nkchenz/hs-doctest/tree/master hs-doctest].

== Firefox extensions ==
=== tear off tabs to be new windows ===
I'd like a Firefox extension that lets you take a tab and drag it out into space, causing it to become a new window. Or just context-menu the tab to do that same thing.

=== browser cache browsing ===
There should be firefox functionality that lets you see what's in your browser cache, say if you're offline. It should show cached files like the history view, as a tree, by site.

Also see:
about:cache?device=disk

There's something sort of like this, CacheViewer, but the UI doesn't look great.