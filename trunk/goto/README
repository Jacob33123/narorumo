This is goto, a utility for bash that I wrote for going to a specific file,
possibly way down in nested directories. The idea is to find a file that you
know is somewhere around, and cd to that directory.

Basically, I found myself often going like this:

ajr@computer:~/project$ find . -name Foo.java
./src/com/foocorp/whatever/path/to/Foo.java
ajr@computer:~/project$ cd src/com/foocorp/whatever/path/to
ajr@computer:~/project/src/com/foocorp/whatever/path/to$ vim Foo.java

After doing that a few too many times, I wrote this script, and then I could
just go:

ajr@computer:~/project$ goto Foo.java
ajr@computer:~/project/src/com/foocorp/whatever/path/to$ vim Foo.java

** HOWTO load goto **
Copy goto.py and goto.sh into a directory on your path. I like my ~/bin
directory.

In one of your bash startup scripts (say, ~/.profile) add this line at the end:

source /path/to/goto.sh

** Usage **
$ goto FILENAME

With just a filename argument, goto will try to find a file matching the name
specified, then cd to the directory where it sits. Matching a directory will cd
to that directory.

$ goto -l FILENAME

Specifying "-l" (ell) enables a "loose match", which means that substrings are
considered matches, and case is not considered.

I hope you find goto helpful. Or at least non-harmful.
If you have any ideas for improvement, feel free to submit issues (or patches)
to the issue tracker here:
http://code.google.com/p/narorumo/issues

-- 
-- Alex Rudnick (alex.rudnick@gmail.com)
